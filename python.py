import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import google.generativeai as genai
import os
from dotenv import load_dotenv

# ============ C·∫§U H√åNH GEMINI ============
load_dotenv()
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))

# ============ C·∫§U H√åNH GIAO DI·ªÜN APP ============
st.set_page_config(page_title="Ph√¢n t√≠ch T√†i ch√≠nh & Gemini AI", layout="wide")

# CSS: T√πy ch·ªânh m√†u s·∫Øc v√† bong b√≥ng chat
st.markdown("""
<style>
/* N·ªÅn t·ªïng th·ªÉ */
body {
    background-color: #f5f6fa;
    color: #333;
}

/* Bong b√≥ng tin nh·∫Øn ng∆∞·ªùi d√πng */
.chat-bubble-user {
    background-color: #d1f1ff;
    color: #000;
    padding: 10px 15px;
    border-radius: 15px;
    margin: 5px 0;
    text-align: right;
    width: fit-content;
    float: right;
    box-shadow: 0px 2px 4px rgba(0,0,0,0.1);
}

/* Bong b√≥ng tin nh·∫Øn AI */
.chat-bubble-ai {
    background-color: #fff;
    color: #333;
    padding: 10px 15px;
    border-radius: 15px;
    margin: 5px 0;
    width: fit-content;
    float: left;
    border: 1px solid #ddd;
    box-shadow: 0px 2px 4px rgba(0,0,0,0.05);
}

/* Avatar */
.avatar {
    border-radius: 50%;
    height: 32px;
    width: 32px;
    object-fit: cover;
    margin: 0 8px;
    vertical-align: middle;
}

/* Khung chat t·ªïng */
.chat-container {
    background-color: #fdfdfd;
    border-radius: 12px;
    padding: 10px 15px;
    height: 480px;
    overflow-y: auto;
    border: 1px solid #ddd;
}
</style>
""", unsafe_allow_html=True)

# ============ GIAO DI·ªÜN CH√çNH ============
st.title("üìä ·ª®ng d·ª•ng Ph√¢n t√≠ch B√°o c√°o T√†i ch√≠nh + Tr·ª£ l√Ω Gemini AI")

col1, col2 = st.columns([2, 1])

# --- PH·∫¶N PH√ÇN T√çCH D·ªÆ LI·ªÜU ---
with col1:
    st.subheader("üìÅ Ph√¢n t√≠ch B√°o c√°o T√†i ch√≠nh")
    uploaded_file = st.file_uploader("T·∫£i l√™n file Excel", type=["xlsx"])

    if uploaded_file:
        df = pd.read_excel(uploaded_file)
        st.dataframe(df)

        if "NƒÉm" in df.columns and "Doanh thu" in df.columns:
            plt.figure()
            plt.plot(df["NƒÉm"], df["Doanh thu"], label="Doanh thu", marker='o', color="#007bff")
            if "L·ª£i nhu·∫≠n" in df.columns:
                plt.plot(df["NƒÉm"], df["L·ª£i nhu·∫≠n"], label="L·ª£i nhu·∫≠n", marker='s', color="#28a745")
            plt.legend()
            plt.title("üìà Xu h∆∞·ªõng Doanh thu v√† L·ª£i nhu·∫≠n")
            plt.grid(True)
            st.pyplot(plt)

        st.markdown("### üìä Th·ªëng k√™ t·ªïng h·ª£p")
        st.write(df.describe())

# --- PH·∫¶N CHAT GEMINI ---
with col2:
    st.subheader("üí¨ Tr·ª£ l√Ω Gemini AI")

    if "messages" not in st.session_state:
        st.session_state.messages = []

    # Hi·ªÉn th·ªã khung chat
    st.markdown('<div class="chat-container" id="chat-box">', unsafe_allow_html=True)
    for msg in st.session_state.messages:
        if msg["role"] == "user":
            st.markdown(
                f'<div
